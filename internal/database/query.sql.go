// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package database

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :execresult
INSERT INTO
    ` + "`" + `users` + "`" + ` (
        ` + "`" + `username` + "`" + `,
        ` + "`" + `first_name` + "`" + `,
        ` + "`" + `last_name` + "`" + `,
        ` + "`" + `password_hash` + "`" + `,
        ` + "`" + `email` + "`" + `
    )
VALUES
    (?, ?, ?, ?, ?)
`

type CreateUserParams struct {
	Username     string
	FirstName    string
	LastName     string
	PasswordHash string
	Email        sql.NullString
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createUser,
		arg.Username,
		arg.FirstName,
		arg.LastName,
		arg.PasswordHash,
		arg.Email,
	)
}

const deleteUserById = `-- name: DeleteUserById :exec
DELETE FROM ` + "`" + `users` + "`" + `
WHERE
    ` + "`" + `id` + "`" + ` = ?
`

func (q *Queries) DeleteUserById(ctx context.Context, id uint32) error {
	_, err := q.db.ExecContext(ctx, deleteUserById, id)
	return err
}
